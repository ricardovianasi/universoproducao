{"version":3,"sources":["utils/app.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,YAAW;AACpB,WAAO;;AAEA,iBAAS,iBAAS,OAAT,EAAkB;AACvB,sBAAU,EAAE,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,OAAnB,CAAV;AACA,gBAAI,OAAO,EAAX;AACA,gBAAI,QAAQ,OAAZ,EAAqB;AACjB,uBAAO,kCAAkC,QAAQ,KAAR,GAAgB,uBAAhB,GAA0C,EAA5E,IAAkF,IAAlF,GAAyF,wHAAzF,GAAoN,QAA3N;AACH,aAFD,MAEO,IAAI,QAAQ,QAAZ,EAAsB;AACzB,uBAAO,kCAAkC,QAAQ,KAAR,GAAgB,uBAAhB,GAA0C,EAA5E,IAAkF,cAAlF,GAAmG,KAAK,gBAAL,EAAnG,GAA6H,2CAApI;AACH,aAFM,MAEA,IAAI,QAAQ,QAAZ,EAAsB;AACzB,uBAAO,kCAAkC,QAAQ,KAAR,GAAgB,uBAAhB,GAA0C,EAA5E,IAAkF,sBAAlF,IAA4G,QAAQ,OAAR,GAAkB,QAAQ,OAA1B,GAAoC,YAAhJ,IAAgK,eAAvK;AACH,aAFM,MAEA;AACH,uBAAO,kCAAkC,QAAQ,KAAR,GAAgB,uBAAhB,GAA0C,EAA5E,IAAkF,cAAlF,GAAmG,KAAK,gBAAL,EAAnG,GAA6H,uDAA7H,IAAwL,QAAQ,OAAR,GAAkB,QAAQ,OAA1B,GAAoC,YAA5N,IAA4O,eAAnP;AACH;;AAED,gBAAI,QAAQ,MAAZ,EAAoB;;AAChB,oBAAI,KAAK,EAAE,QAAQ,MAAV,CAAT;AACA,oBAAI,GAAG,MAAH,MAAgB,EAAE,MAAF,EAAU,MAAV,EAApB,EAAyC;AACrC,4BAAQ,OAAR,GAAkB,IAAlB;AACH;AACD,mBAAG,KAAH,CAAS;AACL,6BAAS,IADJ;AAEL,2BAAO,QAAQ,MAAR,GAAiB,QAAQ,MAAzB,GAAkC,IAFpC;AAGL,6BAAS,QAAQ,OAAR,KAAoB,SAApB,GAAgC,QAAQ,OAAxC,GAAkD,KAHtD;AAIL,yBAAK;AACD,6BAAK,KADJ;AAED,gCAAQ,GAFP;AAGD,iCAAS,GAHR;AAID,yCAAiB;AAJhB,qBAJA;AAUL,gCAAY;AACR,yCAAiB,QAAQ,YAAR,GAAuB,QAAQ,YAA/B,GAA8C,MADvD;AAER,iCAAS,QAAQ,KAAR,GAAgB,IAAhB,GAAuB,GAFxB;AAGR,gCAAQ;AAHA;AAVP,iBAAT;AAgBH,aArBD,MAqBO;;AACH,kBAAE,OAAF,CAAU;AACN,6BAAS,IADH;AAEN,2BAAO,QAAQ,MAAR,GAAiB,QAAQ,MAAzB,GAAkC,IAFnC;AAGN,yBAAK;AACD,gCAAQ,GADP;AAED,iCAAS,GAFR;AAGD,yCAAiB;AAHhB,qBAHC;AAQN,gCAAY;AACR,yCAAiB,QAAQ,YAAR,GAAuB,QAAQ,YAA/B,GAA8C,MADvD;AAER,iCAAS,QAAQ,KAAR,GAAgB,IAAhB,GAAuB,GAFxB;AAGR,gCAAQ;AAHA;AARN,iBAAV;AAcH;AACJ,SApDD;;;AAuDA,mBAAW,mBAAS,MAAT,EAAiB;AACxB,gBAAI,MAAJ,EAAY;AACR,kBAAE,MAAF,EAAU,OAAV,CAAkB;AACd,+BAAW,qBAAW;AAClB,0BAAE,MAAF,EAAU,GAAV,CAAc,UAAd,EAA0B,EAA1B;AACA,0BAAE,MAAF,EAAU,GAAV,CAAc,MAAd,EAAsB,EAAtB;AACH;AAJa,iBAAlB;AAMH,aAPD,MAOO;AACH,kBAAE,SAAF;AACH;AACJ;AAlED,KAAP;AAoEA,CArES,EAAV","file":"utils/app.js","sourcesContent":["var App = function() {\r\n\treturn {\r\n\t\t// wrApper function to  block element(indicate loading)\r\n        blockUI: function(options) {\r\n            options = $.extend(true, {}, options);\r\n            var html = '';\r\n            if (options.animate) {\r\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\">' + '<div class=\"block-spinner-bar\"><div class=\"bounce1\"></div><div class=\"bounce2\"></div><div class=\"bounce3\"></div></div>' + '</div>';\r\n            } else if (options.iconOnly) {\r\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\"><img src=\"' + this.getGlobalImgPath() + 'loading-spinner-grey.gif\" align=\"\"></div>';\r\n            } else if (options.textOnly) {\r\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\"><span>&nbsp;&nbsp;' + (options.message ? options.message : 'LOADING...') + '</span></div>';\r\n            } else {\r\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\"><img src=\"' + this.getGlobalImgPath() + 'loading-spinner-grey.gif\" align=\"\"><span>&nbsp;&nbsp;' + (options.message ? options.message : 'LOADING...') + '</span></div>';\r\n            }\r\n\r\n            if (options.target) { // element blocking\r\n                var el = $(options.target);\r\n                if (el.height() <= ($(window).height())) {\r\n                    options.cenrerY = true;\r\n                }\r\n                el.block({\r\n                    message: html,\r\n                    baseZ: options.zIndex ? options.zIndex : 1000,\r\n                    centerY: options.cenrerY !== undefined ? options.cenrerY : false,\r\n                    css: {\r\n                        top: '10%',\r\n                        border: '0',\r\n                        padding: '0',\r\n                        backgroundColor: 'none'\r\n                    },\r\n                    overlayCSS: {\r\n                        backgroundColor: options.overlayColor ? options.overlayColor : '#555',\r\n                        opacity: options.boxed ? 0.05 : 0.1,\r\n                        cursor: 'wait'\r\n                    }\r\n                });\r\n            } else { // page blocking\r\n                $.blockUI({\r\n                    message: html,\r\n                    baseZ: options.zIndex ? options.zIndex : 1000,\r\n                    css: {\r\n                        border: '0',\r\n                        padding: '0',\r\n                        backgroundColor: 'none'\r\n                    },\r\n                    overlayCSS: {\r\n                        backgroundColor: options.overlayColor ? options.overlayColor : '#555',\r\n                        opacity: options.boxed ? 0.05 : 0.1,\r\n                        cursor: 'wait'\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // wrApper function to  un-block element(finish loading)\r\n        unblockUI: function(target) {\r\n            if (target) {\r\n                $(target).unblock({\r\n                    onUnblock: function() {\r\n                        $(target).css('position', '');\r\n                        $(target).css('zoom', '');\r\n                    }\r\n                });\r\n            } else {\r\n                $.unblockUI();\r\n            }\r\n        },\r\n\t}\r\n}();"],"sourceRoot":"/source/"}