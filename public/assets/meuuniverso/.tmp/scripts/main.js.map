{"version":3,"sources":["main.js"],"names":["$","document","ready","parsleyOptions","errorClass","classHandler","_el","$element","closest","errorsWrapper","errorTemplate","parsley","jQuery","datepicker","todayBtn","autoclose","language","todayHighlight","cep","cities","adminPhone","adminDependents","window","Parsley","addValidator","requirementType","validateString","value","requirement","uppercases","match","length","messages","en","lowecases","numbers","specials"],"mappings":";;AAAAA,EAAEC,QAAF,EAAYC,KAAZ,CAAkB,YAAY;AAC1B,MAAIC,iBAAiB;AACjB;AACAC,gBAAY,WAFK;AAGjBC,kBAAe,sBAAUC,GAAV,EAAe;AAC1B,aAAOA,IAAIC,QAAJ,CAAaC,OAAb,CAAqB,aAArB,CAAP;AACH,KALgB;AAMjBC,mBAAe,kCANE;AAOjBC,mBAAe;AAPE,GAArB;;AAUAV,IAAE,wBAAF,EAA4BW,OAA5B,CAAqCR,cAArC;;AAEA,MAAIS,SAASC,UAAb,EAAyB;AACrBb,MAAE,cAAF,EAAkBa,UAAlB,CAA6B;AACzBC,gBAAU,IADe;AAEzBC,iBAAW,IAFc;AAGzBC,gBAAU,OAHe;AAIzBC,sBAAgB;AAJS,KAA7B;AAMH;;AAED;AACAjB,IAAE,MAAF,EAAUkB,GAAV;;AAEA;AACAlB,IAAE,eAAF,EAAmBmB,MAAnB;;AAEAnB,IAAE,cAAF,EAAkBoB,UAAlB;;AAEApB,IAAE,kBAAF,EAAsBqB,eAAtB;AACH,CA/BD;;AAiCA;AACAC,OAAOC,OAAP,CAAeC,YAAf,CAA4B,WAA5B,EAAyC;AACvCC,mBAAiB,QADsB;AAEvCC,kBAAgB,wBAASC,KAAT,EAAgBC,WAAhB,EAA6B;AAC3C,QAAIC,aAAaF,MAAMG,KAAN,CAAY,QAAZ,KAAyB,EAA1C;AACA,WAAOD,WAAWE,MAAX,IAAqBH,WAA5B;AACD,GALsC;AAMvCI,YAAU;AACRC,QAAI,4DADI;AAER,aAAS;AAFD;AAN6B,CAAzC;;AAYA;AACAX,OAAOC,OAAP,CAAeC,YAAf,CAA4B,WAA5B,EAAyC;AACvCC,mBAAiB,QADsB;AAEvCC,kBAAgB,wBAASC,KAAT,EAAgBC,WAAhB,EAA6B;AAC3C,QAAIM,YAAYP,MAAMG,KAAN,CAAY,QAAZ,KAAyB,EAAzC;AACA,WAAOI,UAAUH,MAAV,IAAoBH,WAA3B;AACD,GALsC;AAMvCI,YAAU;AACRC,QAAI,4DADI;AAER,aAAS;AAFD;AAN6B,CAAzC;;AAYA;AACAX,OAAOC,OAAP,CAAeC,YAAf,CAA4B,QAA5B,EAAsC;AACpCC,mBAAiB,QADmB;AAEpCC,kBAAgB,wBAASC,KAAT,EAAgBC,WAAhB,EAA6B;AAC3C,QAAIO,UAAUR,MAAMG,KAAN,CAAY,QAAZ,KAAyB,EAAvC;AACA,WAAOK,QAAQJ,MAAR,IAAkBH,WAAzB;AACD,GALmC;AAMpCI,YAAU;AACRC,QAAI,kDADI;AAER,aAAS;AAFD;AAN0B,CAAtC;;AAYA;AACAX,OAAOC,OAAP,CAAeC,YAAf,CAA4B,SAA5B,EAAuC;AACrCC,mBAAiB,QADoB;AAErCC,kBAAgB,wBAASC,KAAT,EAAgBC,WAAhB,EAA6B;AAC3C,QAAIQ,WAAWT,MAAMG,KAAN,CAAY,WAAZ,KAA4B,EAA3C;AACA,WAAOM,SAASL,MAAT,IAAmBH,WAA1B;AACD,GALoC;AAMrCI,YAAU;AACRC,QAAI,sDADI;AAER,aAAS;AAFD;AAN2B,CAAvC;;AAYAX,OAAOC,OAAP,CAAeC,YAAf,CAA4B,MAA5B,EAAoC;AAClCC,mBAAiB,QADiB;AAElCC,kBAAgB,wBAASC,KAAT,EAAgBC,WAAhB,EAA6B;AAC3C,QAAIQ,WAAWT,MAAMG,KAAN,CAAY,eAAZ,KAAgC,EAA/C;AACA,WAAOM,SAASL,MAAT,IAAmBH,WAA1B;AACD,GALiC;AAMlCI,YAAU;AACRC,QAAI,8DADI;AAER,aAAS;AAFD;AANwB,CAApC","file":"main.js","sourcesContent":["$(document).ready(function () {\r\n    var parsleyOptions = {\r\n        // successClass: 'has-success',\r\n        errorClass: 'has-error',\r\n        classHandler : function( _el ){\r\n            return _el.$element.closest('.form-group');\r\n        },\r\n        errorsWrapper: '<span class=\"help-block\"></span>',\r\n        errorTemplate: '<span></span>'\r\n    };\r\n\r\n    $('form[data-js-validate]').parsley( parsleyOptions );\r\n\r\n    if (jQuery().datepicker) {\r\n        $('.date-picker').datepicker({\r\n            todayBtn: true,\r\n            autoclose: true,\r\n            language: 'pt-BR',\r\n            todayHighlight: true\r\n        });\r\n    }\r\n\r\n    //Inicia o plugin que controla a busca de cep\r\n    $(\".cep\").cep();\r\n\r\n    //Inicia o plugin que controla a busca de cidades\r\n    $(\".state-cities\").cities();\r\n\r\n    $('.admin-phone').adminPhone();\r\n\r\n    $('#user-dependents').adminDependents();\r\n});\r\n\r\n//has uppercase\r\nwindow.Parsley.addValidator('uppercase', {\r\n  requirementType: 'number',\r\n  validateString: function(value, requirement) {\r\n    var uppercases = value.match(/[A-Z]/g) || [];\r\n    return uppercases.length >= requirement;\r\n  },\r\n  messages: {\r\n    en: 'Your password must contain at least (%s) uppercase letter.',\r\n    'pt-br': 'É necessário conter ao menos (%s) letra maiúscula.'\r\n  }\r\n});\r\n\r\n//has lowercase\r\nwindow.Parsley.addValidator('lowercase', {\r\n  requirementType: 'number',\r\n  validateString: function(value, requirement) {\r\n    var lowecases = value.match(/[a-z]/g) || [];\r\n    return lowecases.length >= requirement;\r\n  },\r\n  messages: {\r\n    en: 'Your password must contain at least (%s) lowercase letter.',\r\n    'pt-br': 'É necessário conter ao menos (%s) letra minúscula.'\r\n  }\r\n});\r\n\r\n//has number\r\nwindow.Parsley.addValidator('number', {\r\n  requirementType: 'number',\r\n  validateString: function(value, requirement) {\r\n    var numbers = value.match(/[0-9]/g) || [];\r\n    return numbers.length >= requirement;\r\n  },\r\n  messages: {\r\n    en: 'Your password must contain at least (%s) number.',\r\n    'pt-br': 'É ncessário conter ao menos (%s) número'\r\n  }\r\n});\r\n\r\n//has special char\r\nwindow.Parsley.addValidator('special', {\r\n  requirementType: 'number',\r\n  validateString: function(value, requirement) {\r\n    var specials = value.match(/[a-zA-Z]/g) || [];\r\n    return specials.length >= requirement;\r\n  },\r\n  messages: {\r\n    en: 'Your password must contain at least (%s) characters.',\r\n    'pt-br': 'É ncessário conter ao menos (%s) letra'\r\n  }\r\n});\r\n\r\nwindow.Parsley.addValidator('char', {\r\n  requirementType: 'string',\r\n  validateString: function(value, requirement) {\r\n    var specials = value.match(/[^a-zA-Z0-9]/g) || [];\r\n    return specials.length >= requirement;\r\n  },\r\n  messages: {\r\n    en: 'Your password must contain at least (%s) special characters.',\r\n    'pt-br': 'É ncessário conter ao menos (%s) caracter especial'\r\n  }\r\n});\r\n"]}